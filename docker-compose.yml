version: "3.8"
services:
  resource-service:
    build: resource-service
    ports:
      - "7002:8080"
    environment:
      - RESOURCE_SERVICE_SERVER_PORT=${RESOURCE_SERVICE_SERVER_PORT}
      - RESOURCE_SERVICE_DB_PASSWORD=${RESOURCE_SERVICE_DB_PASSWORD}
      - RESOURCE_SERVICE_DB_USERNAME=${RESOURCE_SERVICE_DB_USERNAME}
      - RESOURCE_SERVICE_DB_URL=${RESOURCE_SERVICE_DB_URL}
      - SONG_SERVICE_URL=${SONG_SERVICE_URL}
      - S3_URL=${S3_URL}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
    depends_on:
      - resource-service-db
      - discovery-server
    restart: always
  song-service:
    build: song-service
    expose:
    - "8080"
    environment:
      - SONG_SERVICE_SERVER_PORT=${SONG_SERVICE_SERVER_PORT}
      - SONG_SERVICE_DB_PASSWORD=${SONG_SERVICE_DB_PASSWORD}
      - SONG_SERVICE_DB_USERNAME=${SONG_SERVICE_DB_USERNAME}
      - SONG_SERVICE_DB_URL=${SONG_SERVICE_DB_URL}
    depends_on:
      - song-service-db
      - discovery-server
    restart: always
    deploy:
      mode: replicated
      replicas: 2
  resource-service-db:
    image: postgres
    expose:
      - ${RESOURCE_SERVICE_DB_PORT}
    volumes:
      - ${RESOURCE_SERVICE_DB_VOLUME}
    restart: always
  song-service-db:
    image: postgres
    expose:
      - ${SONG_SERVICE_DB_PORT}
    volumes:
      - ${SONG_SERVICE_DB_VOLUME}
    restart: always
  localstack:
    image: localstack/localstack
    expose:
      - ${LOCALSTACK_PORT}
    restart: always
  discovery-server:
    build: discovery-server
    ports:
      - "8761:8761"
    restart: always
volumes:
  resource-service-db:
  song-service-db: